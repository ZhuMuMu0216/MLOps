name: Unit Tests & Google cloud build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ "ubuntu-latest" ]
        python-version: [ "3.11" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: setup.py

      - name: Install dependencies
        run: |
          python -m pip install -U pip setuptools wheel
          pip install -r requirements.txt
          pip install -r requirements_dev.txt
          pip install -e .
          pip list

      - name: Download datasets
        run: dvc pull -v --force

      - name: Check working directory path
        run: pwd

      - name: Check working directory
        run: ls -la

      - name: Check data folder
        run: ls -la data

      # Upload datasets to the shared folder so the latter build step can download and use the data
      - name: Upload data folder
        uses: actions/upload-artifact@v4
        with:
          name: data
          path: data/
          retention-days: 1

      - name: transfer github secret to file
        env:
          CLOUD_STORAGE_TRAINED_MODELS: ${{ secrets.CLOUD_STORAGE_TRAINED_MODELS }}
        run: |
          mkdir -p keys
          echo "$CLOUD_STORAGE_TRAINED_MODELS" > keys/cloud_storage_key.json

      - name: Run tests & coverage
        run: |
          coverage run -m pytest tests/
          coverage report -m -i

  build:
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'pull_request' && github.base_ref == 'main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # download datasets from the shared folder
      - name: Download data folder
        uses: actions/download-artifact@v4
        with:
          name: data
          path: data/

      - name: Check working directory path
        run: pwd

      - name: Check working directory
        run: ls -la

      - name: Check data folder
        run: ls -la data

      - name: Auth with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}

      - name: transfer github secret to file
        env:
          CLOUD_STORAGE_TRAINED_MODELS: ${{ secrets.CLOUD_STORAGE_TRAINED_MODELS }}
        run: |
          mkdir -p keys
          echo "$CLOUD_STORAGE_TRAINED_MODELS" > keys/cloud_storage_key.json

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Submit build
        run: gcloud builds submit --polling-interval=5 --region=europe-west1 --config cloud_build_and_deploy.yaml --gcs-log-dir=gs://mlops-groupwork_cloudbuild/logs
