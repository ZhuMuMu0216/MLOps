steps:
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build docker image for model-training'
    args: [
      'build',
      '.',
      '-t',
      'europe-west1-docker.pkg.dev/$PROJECT_ID/mlops-docker-repo/model-training',
      '-f',
      'dockerfiles/train.dockerfile'
    ]

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build docker image for api-service'
    args: [
      'build',
      '.',
      '-t',
      'europe-west1-docker.pkg.dev/$PROJECT_ID/mlops-docker-repo/api-service',
      '-f',
      'dockerfiles/api.dockerfile'
    ]
    waitFor: [ '-' ]

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push docker image for model-training'
    args: [
      'push',
      'europe-west1-docker.pkg.dev/$PROJECT_ID/mlops-docker-repo/model-training'
    ]
    waitFor: [ 'Build docker image for model-training' ]

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push docker image for api-service'
    args: [
      'push',
      'europe-west1-docker.pkg.dev/$PROJECT_ID/mlops-docker-repo/api-service'
    ]
    waitFor: [ 'Build docker image for api-service' ]

  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy api-service to Cloud Run'
    args: [
      'run',
      'deploy',
      'api-service',
      '--image',
      'europe-west1-docker.pkg.dev/$PROJECT_ID/mlops-docker-repo/api-service',
      '--region',
      'europe-west1',
      '--platform',
      'managed',
      '--allow-unauthenticated',
    ]
    waitFor: [ 'Push docker image for api-service' ]